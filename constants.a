; constants.a
;

; constants
charSPACE                       = $20       ;

; OS memory locations
fsBlockNumberHigh               = $03c7     ;
fsBlockFlagByte                 = $03ca     ;

vectorEVNTV                     = $0220     ; Event vector, fired at VSYNC to update sound
timeClockB                      = $0297     ; 5 byte clock as read by TIME
countdownIntervalTimer          = $029C     ; 5 byte countdown interval timer (causes an EVENT when it reaches zero)
vduTextCursorXPosition          = $0318     ;
vduTextCursorYPosition          = $0319     ;
softCharacterDefinitions        = $0c00     ;

mode7Screen                     = $7c00     ;

OSWRCH                          = $ffee     ;
OSWORD                          = $fff1     ;
OSBYTE                          = $fff4     ;
OSCLI                           = $fff7     ;

; ***************************************************************************************
; game specifics

; zero page memory locations
meteorTailAnimationOffset       = $3f       ;
energyFieldSpriteOffset         = $3f       ;
triggerSwitch                   = $40       ;
switchMessage2                  = $50       ;
switchClearCentreMessage        = $53       ;
switchClearCentreMessageEnd     = $58       ;
switchMessage2End               = $58       ;
collisionFudgeFactor            = $5a       ;
switchMessage                   = $60       ;
switchMessageEnd                = $68       ;

levelDataOffset                 = $70       ;

plotMode                        = $70       ;
plotX                           = $71       ;
plotY                           = $72       ;
plotXOffset                     = $73       ;
plotYOffset                     = $74       ;
plotScreenAddressLow            = $75       ;
plotScreenAddressHigh           = $76       ;
plotSourceSpriteAddressLow      = $77       ;
plotSourceSpriteAddressHigh     = $78       ;

levelFeatureIndex               = $79       ;
currentLevel                    = $80       ;
levelColours                    = $81       ;
levelColours2                   = $82       ;
zpGuardianPositionX             = $8a       ;
zpGuardianPositionY             = $8b       ;
zpGuardianLimit1                = $8c       ;
zpGuardianLimit2                = $8d       ;
zpGuardianAnimIndex             = $8e       ;
switchTriggered                 = $9f       ;

; ***************************************************************************************
; shared memory locations
; (these values are defined in one source file, and used in another)

verticalGuardianMODE1Address    = $0400     ;
verticalGuardianMODE1Address1   = $0440     ;
verticalGuardianMODE1Address2   = $0480     ;
verticalGuardianMODE1Address3   = $04c0     ;
willyRight0                     = $0500     ; Must be on a page boundary
willyLeft0                      = $0600     ; Must be on a page boundary
spikePlant                      = $0a58     ;
allOtherSpikes                  = $0a60     ;
footSprite                      = $0d40     ;
guardianPositions               = $0d80     ;
guardianPositionsCopy           = $0d90     ;
plot                            = $0f00     ;
spriteColourMask                = $109b     ; $ff for colour 3, $f0 for colour 2, $0f for colour 1
updatePlayer                    = $109c     ;
updatePlayerWithAnimation       = $1423     ;
opcodeForJsrPlot                = $145d     ;
readTwoCharactersFromScreen     = $14a7     ;
playerPixelX                    = $183a     ;
playerPixelY                    = $183b     ;
newPlayerPixelX                 = $183c     ;
newPlayerPixelY                 = $183d     ;
willyAnimationEOR               = $183f     ;
willyGraphicsPage               = $1840     ;
willySpriteAddressLow           = $1842     ;
willySpriteAddressHigh          = $1843     ;
isJumping                       = $184b     ;
playerHeightOnTakeOff           = $184c     ;
jumpPhase                       = $184d     ;
conveyorDirection               = $1854     ;
readOrWriteCachedBackground     = $1869     ;
kongBeastSwitchTriggered        = $197f     ;
updateVerticalGuardians         = $1980     ;
doWeMoveEugene                  = $19eb     ;
eugeneColourMask                = $199f     ;
drawRegularKong                 = $19ee     ;
eugenePositionY                 = $1c48     ;
currentVerticalGuardians        = $1dad     ;
verticalGuardian2               = $1db1     ;
energyFieldSprites              = $1dc1     ;
animateKeysUpdateHorizontalGuardiansAndLevel19EnergyFields   = $1e0d     ;
copyGuardianSprites             = $1fb5     ;

resetLevel19Meteors             = $229b     ;

showTitleScreenMessageAndWaitForRETURN = $23c0          ;
creditsMessage                  = $2430                 ;
creditsMessageEnd               = creditsMessage + $47  ;
bylineMessage                   = $24e0                 ;
bylineMessageEnd                = bylineMessage + $15   ;

zeroScoreJumper                 = $24f8     ;

drawFooterTextOrReturn          = $2500     ;
drawConveyors                   = $254d     ;
conveyorX                       = $25a4     ;
showScoreLivesAndLevel          = $25c8     ;
exitPositionX                   = $25fe     ;
exitPositionY                   = $25ff     ;
numbers                         = $2680     ;
clearScreen                     = $2821     ;

initLevel                       = $28b8     ;

; from the unused section:
decodeNextSingleItem            = $2d69     ;
setSingleItemNextType            = $2df7     ;

singleItemSprite                = $2dfd     ;
decodeLevelByte                 = $2dfe     ;
keyType                         = $2e02     ;
keyPositionCounter              = $2e89     ;

; from the unused section:
singleItemSpriteOffset          = $2e03     ;
incrementLevelDataPointer       = $2e18     ;

colourCycleKeys                 = $2e8c     ;
drawRoomName                    = $2ef0     ;

roomNumberReached               = $2ff6     ;
keysLeft                        = $2fff     ;
mainEventRoutine                = $3000     ; See MINER3.a
logicalScreenStart              = $3000     ; Visible screen start is screenStartAddress
checkForChannel3Update          = $303b     ;
soundDirect                     = $3075     ;
channel3Frequency               = $3098     ;
channel2Frequency               = $3099     ;
playAttractLoop                 = $309a     ;
checkCheatCode                  = $30fc     ;
updateVerticalGuardiansAndJumpAndFallSounds = $3146     ;
miner3EntryPoint                = $3190     ; See MINER3.a

screenStartAddress              = $3280     ; start of visible screen
blankAreaOfScreen               = $34d0     ; empty screen area to the right of the play area
screenEndAddress                = $6000     ; end of visible screen

startGame                       = $6200     ;
showLevel                       = $62c3     ;
pauseMusic                      = $62e9     ;
updateAirAndCheckExit           = $646d     ;
drawAirBar                      = $6577     ;
addToScore                      = $673c     ;
score                           = $67ba     ;
lives                           = $67be     ; See miner4.a
death                           = $67d6     ;
playSoundAXY                    = $68ac     ;
collideWithHorizontalGuardians  = $68df     ;
willyIsOnGround                 = $6b7c     ;
cheatModeEnabled                = $6b7f     ;
oswordSoundBlock                = $6b80     ;
afterSpace                      = $7390     ; See MINER2.a

screenEndAddress                = $6000     ; end of visible screen
backgroundCache                 = $6ba0     ; six cells copied from the screen before the player is drawn
levelDefinitions                = $6c00     ; start of level definitions

miner4EntryPoint                = $619a     ; See miner4.a
resumeMusic                     = $62e3     ; See miner4.a
lives                           = $67be     ; See miner4.a
willyIsOnGround                 = $6b7c     ; See miner4.a
guardianGraphics                = $7280     ; See miner4.a
fromMiner2                      = $7475     ; See miner1.a
eventVLow                       = $74a7     ; See miner1.a
eventVHigh                      = $74ac     ; See miner1.a
setModeString                   = $74d4     ; See miner1.a
setModeStringEnd                = setModeString + 7 ; See miner1.a
whiteBackgroundString           = $74db     ; See miner1.a
whiteBackgroundStringEnd        = whiteBackgroundString + $1e ; See miner1.a
skylab4Sprite                   = $7a80     ; See miner4.a
skylab5Sprite                   = $7ac0     ; See miner4.a
eugeneSprite                    = $7b00     ; See miner4.a
energyFieldTimer                = $7eed     ;
